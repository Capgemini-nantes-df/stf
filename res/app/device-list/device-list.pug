.stf-device-list
  .row.stf-stats-container.unselectable
    .col-md-12
      device-list-stats(tracker='tracker')

  .row.unselectable
    .col-md-12
      .widget-container.fluid-height.stf-device-list-tabs
        .widget-content.padded

          .filtering-buttons
            datalist(id='searchFields')
              select(name='searchFields')
                option(ng-repeat='column in columns', ng-value='column.name + ": "',
                ng-bind='columnDefinitions[column.name].title | translate')
            input(type='search', autosave='deviceFilter'
              name='deviceFilter', ng-model='search.deviceFilter', ng-change='applyFilter(search.deviceFilter)',
              ng-model-options='{debounce: 150}'
              autocorrect='off', autocapitalize='off', spellcheck='false',
              list='searchFields', multiple, focus-element='search.focusElement',
              text-focus-select, accesskey='4').form-control.input-sm.device-search.pull-right

            span.pull-right(ng-if='activeTabs.details && !$root.basicMode')
              .btn-group(uib-dropdown).pull-right
                button.btn.btn-sm.btn-primary-outline(type='button', uib-dropdown-toggle)
                  i.fa.fa-columns
                  span(ng-bind='"Customize"|translate')

                ul.uib-dropdown-menu(role='menu').pointer.stf-device-details-customize
                  li(ng-repeat='column in columns track by column.name',
                  ng-hide='!adminMode && columnDefinitions[column.name].admin',
                  ng-click='$event.stopPropagation()')
                    label.checkbox.pointer
                      input(type='checkbox', ng-model='column.selected')
                      span(ng-bind='columnDefinitions[column.name].title | translate')
                  li
                    button(ng-click='reset()').btn.btn-xs.btn-danger-outline
                      i.fa.fa-trash-o
                      span(ng-bind='"Reset"|translate')

          uib-tabset.overflow-auto.device-list-active-tabs(ng-if='activeTabs')
            uib-tab(active='activeTabs.icons', select='focusSearch()')
              uib-tab-heading
                i.fa.fa-th-large
                span(translate) Devices
              div.device-list-devices-content(ng-if='activeTabs.icons').selectable

                device-list-icons(tracker='tracker', columns='columns', sort='sort', filter='filter')

            uib-tab(active='activeTabs.details', select='focusSearch()', ng-if='!$root.basicMode')
              uib-tab-heading
                i.fa.fa-list
                span(translate) Details
              div.device-list-details-content(ng-if='activeTabs.details').selectable

                device-list-details(tracker='tracker', columns='columns', sort='sort', filter='filter').selectable

  .row.unselectable
    .col-md-12
      .widget-container.fluid-height.stf-device-list-tabs
        .widget-content.padded
          h3 Devices
          button(ng-click='selectAll()').btn.btn-primary Select all devices
          button(ng-click='deselectAll()').btn.btn-primary Deselect all devices

  .row.unselectable
    .col-md-12
      .widget-container.fluid-height.stf-device-list-tabs
        .widget-content.padded
          h3 Browsers
          .row
            .col-md-4
              form(enable-autofill, ng-submit='openURLAll()')
                .input-group.url-input-container
                  input.form-control(type='text', name='textURL', placeholder='http://...',
                  autocomplete='url', ng-model='textURL', text-focus-select,
                  autocapitalize='off', spellcheck='false', blur-element='blurUrl'
                  accesskey='N', tabindex='10', ng-change='textUrlChanged()',
                  focus-element='nav.focusUrl')
                  img(ng-src='{{urlFavicon}}')

                  .input-group-btn
                    button(ng-click='openURLAll()', ng-disabled='!textURL', translate).btn.btn-primary-outline Open


  .row.unselectable
    .col-md-12
      .widget-container.fluid-height(ng-controller='ScreenshotsCtrl').stf-screenshots
       .widget-content.padded
          h3 Screenshots
        .heading
          
          button(ng-click='takeScreenshotAll()').btn.btn-primary Take Screenshot

          .button-spacer

          clear-button(ng-click='clearAll()', ng-disabled='!screenshotsAll.length')

          .button-spacer

          .pull-right
            button.btn.btn-primary-outline.btn-sm.transparent-border(
              ng-click='zoom({min: 80, step: -50})',
              ng-disabled='!screenshotsAll.length')
              i.fa.fa-minus

            input(type='range', ng-model='screenShotSize', min='80', max='480', step='10',
            ng-model-options='{ updateOn: "default blur", debounce: { default: 100, blur: 0} }',
            ng-disabled='!screenshotsAll.length').zoom-range

            button.btn.btn-primary-outline.btn-sm.transparent-border(
              ng-click='zoom({max: 480, step: 50})',
              ng-disabled='!screenshotsAll.length')
              i.fa.fa-plus

        .widget-content.padded
          nothing-to-show(message='{{"No screenshots taken"|translate}}', icon='fa-camera', ng-show='!screenshotsAll.length')

          ul.screenshots-icon-view.clear-fix.selectable
            li.screenshots-icon-item(ng-repeat='shot in screenshotsAll').cursor-select
              h5 {{shot.device.model}}
              h6 {{ shot.body.date | date:'HH:mm:ss' }}
              a(ng-href='{{ shot.body.href }}', target='_blank')
                img(ng-src='{{ shot.body.href + shotSizeParameter(480, 1) }}',
                ng-srcset='{{ shot.body.href + shotSizeParameter(480, 2) }} 2x').screenshot-image

          .clearfix

